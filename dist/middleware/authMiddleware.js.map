{"version":3,"sources":["../../src/middleware/authMiddleware.js"],"names":["verifyToken","req","res","next","token","headers","status","send","auth","message","JWT","verify","Config","secret","err","decoded","userId","id","module","exports"],"mappings":";;AACA;;;;AAEA;;;;;;AAEA;AALA;AAMA,IAAIA,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAElC;AACA,QAAIC,QAAQH,IAAII,OAAJ,CAAY,gBAAZ,CAAZ;AACA,QAAI,CAACD,KAAL,EACI,OAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,KAAR,EAAeC,SAAS,oBAAxB,EAArB,CAAP;;AAEJ;AACAC,2BAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,gBAAOC,MAAzB,EAAiC,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACpD,YAAID,GAAJ,EACI,OAAOZ,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,KAAR,EAAeC,SAAS,+BAAxB,EAArB,CAAP;;AAEJ;AACAR,YAAIe,MAAJ,GAAaD,QAAQE,EAArB;AACAd;AACH,KAPD;AASH,CAjBD;AAJA;;;AAuBAe,OAAOC,OAAP,GAAiB;AACbnB;AADa,CAAjB","file":"authMiddleware.js","sourcesContent":["// importing JWT module\nimport JWT from 'jsonwebtoken';\n// Importing config file to define cross app variables\nimport Config from '../config/index.js';\n\n//  used to create JWT for sites authentication process\nlet verifyToken = (req, res, next) => {\n\n    // check header or url parameters or post parameters for token\n    let token = req.headers['x-access-token'];\n    if (!token)\n        return res.status(403).send({ auth: false, message: 'No token provided.' });\n\n    // verifies secret and checks exp\n    JWT.verify(token, Config.secret, function(err, decoded) {\n        if (err)\n            return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n\n        // if everything is good, save to request for use in other routes\n        req.userId = decoded.id;\n        next();\n    });\n\n}\n\nmodule.exports = {\n    verifyToken\n};\n"]}