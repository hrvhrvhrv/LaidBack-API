{"version":3,"sources":["../../src/model/Pupil.js"],"names":["Schema","mongoose","PupilSchema","firstName","type","String","required","lastName","phoneNumber","unique","registration","provisional","Boolean","default","theoryTest","previousLessons","Number","location","password","email","role","enum","availability","Array","lessons","blockBooking","created","Date","now","plugin","uniqueValidator","message","module","exports","model"],"mappings":";;AACA;;;;AACA;;;;;;AAEA;AAJA;AAKA,IAAIA,SAASC,mBAASD,MAAtB;;AAEA,IAAIE,cAAc,IAAIF,MAAJ,CAAW;AACzBG,eAAW;AACPC,cAAMC,MADC;AAEPC,kBAAU;AAFH,KADc;AAKzBC,cAAU;AACNH,cAAMC,MADA;AAENC,kBAAU;AAFJ,KALe;AASzBE,iBAAa;AACTJ,cAAMC,MADG;AAETC,kBAAU,IAFD;AAGTG,gBAAO;AAHE,KATY;AAczBC,kBAAa;AACTC,qBAAa;AACTP,kBAAMQ,OADG;AAETC,qBAAS;AAFA,SADJ;AAKTC,oBAAW;AACPV,kBAAMQ,OADC;AAEPC,qBAAS;AAFF,SALF;AASTE,yBAAiB;AACbX,kBAAMY,MADO;AAEbH,qBAAS;AAFI;AATR,KAdY;AA4BzBI,cAAU;AACNb,cAAMC,MADA;AAENQ,iBAAS;;AAFH,KA5Be;AAiCzBK,cAAUb,MAjCe;AAkCzBc,WAAO;AACHf,cAAMC,MADH;AAEHC,kBAAU,IAFP;AAGHG,gBAAO;AAHJ,KAlCkB;AAuCzBW,UAAM;AACFhB,cAAMC,MADJ;AAEFgB,cAAM,CAAC,WAAD,EAAc,YAAd,EAA2B,YAA3B,CAFJ;AAGFR,iBAAS;AAHP,KAvCmB;AA4CzBS,kBAAc;AACVlB,cAAMmB,KADI;AAEVV,iBAAS,CACL,KADK,EACC,KADD,EACO,KADP,EACa,MADb,EACoB,KADpB;AAFC,KA5CW;AAkDzBW,aAAS,EAlDgB;AAmDzBC,kBAAc;AACVrB,cAAMY;AADI,KAnDW;AAsDzBU,aAAS,EAAEtB,MAAMuB,IAAR,EAAcd,SAASc,KAAKC,GAA5B;AAtDgB,CAAX,CAAlB;;AAyDA;AACA1B,YAAY2B,MAAZ,CAAmBC,iCAAnB,EAAoC,EAAEC,SAAS,8BAAX,EAApC;;AAGAC,OAAOC,OAAP,GAAiBhC,mBAASiC,KAAT,CAAe,OAAf,EAAwBhC,WAAxB,CAAjB","file":"Pupil.js","sourcesContent":["// mongooes module imported\nimport mongoose from 'mongoose';\nimport uniqueValidator from 'mongoose-unique-validator';\n\n// defining data schema for mongoDB\nlet Schema = mongoose.Schema;\n\nlet PupilSchema = new Schema({\n    firstName: {\n        type: String,\n        required: true\n    },\n    lastName: {\n        type: String,\n        required: true\n    },\n    phoneNumber: {\n        type: String,\n        required: true,\n        unique:true\n    },\n    registration:{\n        provisional: {\n            type: Boolean,\n            default: true\n        },\n        theoryTest:{\n            type: Boolean,\n            default: false\n        },\n        previousLessons: {\n            type: Number,\n            default: 0\n        }\n    },\n    location: {\n        type: String,\n        default: 'G12 ABZ'\n\n    },\n    password: String,\n    email: {\n        type: String,\n        required: true,\n        unique:true\n    },\n    role: {\n        type: String,\n        enum: [\"Applicant\", \"Registered\",\"Instructor\"],\n        default: \"Applicant\"\n    },\n    availability: {\n        type: Array,\n        default: [\n            \"mon\",\"tue\",\"wed\",\"thur\",\"fri\"\n        ]\n    },\n    lessons: [],\n    blockBooking: {\n        type: Number\n    },\n    created: { type: Date, default: Date.now }\n});\n\n//  using unique validator plugin for mongoDB - it checks that variables are unique and returns detailed errors if not\nPupilSchema.plugin(uniqueValidator, { message: 'Please retry {PATH}. {VALUE}' });\n\n\nmodule.exports = mongoose.model('Pupil', PupilSchema);"]}