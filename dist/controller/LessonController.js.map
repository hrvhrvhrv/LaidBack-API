{"version":3,"sources":["../../src/controller/LessonController.js"],"names":["config","db","api","get","req","res","Lesson","find","err","blogData","send","json","findById","params","id","put","lessonData","pupilId","lessonSLot","body","lessonDate","pickUpLocation","save","review","message","start","Date","setHours","end"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AACA;AACA;;kBAEe,gBAAkB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,QAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBC,yBAAOC,IAAP,CAAY,EAAZ,EAAgB,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC/B,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,IAAJ,CAASF,GAAT;AACH;AACDH,gBAAIM,IAAJ,CAASF,QAAT;AACH,SALD;AAMH,KAPD;;AASA;AACAP,QAAIC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BC,yBAAOM,QAAP,CAAgBR,IAAIS,MAAJ,CAAWC,EAA3B,EAA+B,UAACN,GAAD,EAAMC,QAAN,EAAmB;AAC9C,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,IAAJ,CAASF,GAAT;AACH;AACDH,gBAAIM,IAAJ,CAASF,QAAT;AACH,SALD;AAMH,KAPD;;AAWAP,QAAIa,GAAJ,CAAQ,MAAR,EAAgB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC1BC,yBAAOM,QAAP,CAAgBR,IAAIS,MAAJ,CAAWC,EAA3B,EAA+B,UAACN,GAAD,EAAMQ,UAAN,EAAqB;AAChD,gBAAIR,GAAJ,EAAS;AACLH,oBAAIK,IAAJ,CAASF,GAAT;AAEH;AACGQ,uBAAWC,OAAX,GAAqBb,IAAIS,MAAJ,CAAWC,EAAhC;AACAE,uBAAWE,UAAX,GAAwBd,IAAIe,IAAJ,CAASD,UAAjC;AACAF,uBAAWI,UAAX,GAAwBhB,IAAIe,IAAJ,CAASC,UAAjC;AACAJ,uBAAWK,cAAX,GAA4BjB,IAAIe,IAAJ,CAASE,cAArC;AACAL,uBAAWM,IAAX,CAAgB,UAACd,GAAD,EAAMe,MAAN,EAAiB;AAC7B,oBAAIf,GAAJ,EAAS;AACLH,wBAAIK,IAAJ,CAASF,GAAT;AACH;;AAEDH,oBAAIM,IAAJ,CAAS,EAACa,SAAS,qBAAV,EAAT;AACH,aAND;AAOH,SAhBL;AAiBH,KAlBD;;AAoBAtB,QAAIC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,YAAIoB,QAAQ,IAAIC,IAAJ,EAAZ;AACAD,cAAME,QAAN,CAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB;;AAEA,YAAIC,MAAM,IAAIF,IAAJ,EAAV;AACAE,YAAID,QAAJ,CAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,GAAtB;;AAEArB,yBAAOC,IAAP,CAAY,EAAC,cAAc,EAAC,QAAQkB,KAAT,EAAgB,OAAOG,GAAvB,EAAf,EAAZ,EAAyD,UAACpB,GAAD,EAAMQ,UAAN,EAAqB;AAC1E,gBAAIR,GAAJ,EAAS;AACLH,oBAAIK,IAAJ,CAASF,GAAT;AAEH;;AAEGH,gBAAIM,IAAJ,CAASK,UAAT;AACH,SAPL;AASH,KAhBD;;AAkBA,WAAOd,GAAP;AACH,C","file":"LessonController.js","sourcesContent":["import mongoose from 'mongoose';\nimport {Router} from 'express';\nimport Lesson from '../model/Lesson';\nimport bodyParser from 'body-parser';\n// import passport from 'passport';\n// import { authenticate } from '../middleware/authMiddleware';\n\nexport default ({config, db}) => {\n    let api = Router();\n\n    //  read\n    // /v1/blog - Read (return all)\n    api.get('/', (req, res) => {\n        Lesson.find({}, (err, blogData) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(blogData);\n        });\n    });\n\n    // /v1/blog/:id - Read 1 (return by ID)\n    api.get('/:id', (req, res) => {\n        Lesson.findById(req.params.id, (err, blogData) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(blogData);\n        });\n    });\n\n\n\n    api.put('/:id', (req, res) => {\n        Lesson.findById(req.params.id, (err, lessonData) => {\n            if (err) {\n                res.send(err);\n\n            }\n                lessonData.pupilId = req.params.id;\n                lessonData.lessonSLot = req.body.lessonSLot;\n                lessonData.lessonDate = req.body.lessonDate;\n                lessonData.pickUpLocation = req.body.pickUpLocation;\n                lessonData.save((err, review) => {\n                    if (err) {\n                        res.send(err);\n                    }\n\n                    res.json({message: \"Lesson info Updated\"});\n                });\n            })\n    });\n\n    api.get('/dates/today', (req, res) => {\n        let start = new Date();\n        start.setHours(0,0,0,0);\n\n        let end = new Date();\n        end.setHours(23,59,59,999);\n\n        Lesson.find({\"lessonDate\": {\"$gte\": start, \"$lt\": end}}, (err, lessonData) => {\n            if (err) {\n                res.send(err);\n\n            }\n\n                res.json(lessonData);\n            });\n\n    });\n\n    return api;\n}\n\n\n"]}