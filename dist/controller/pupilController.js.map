{"version":3,"sources":["../../src/controller/pupilController.js"],"names":["config","db","api","get","req","res","Pupil","find","err","pupilData","status","json","error","message","findById","params","id","password","role","name","put","location","body","email","phoneNumber","save","delete","remove","_id","Lesson","pupilId","post","newLesson","lessonSLot","lessonDate","pickUpLocation","review","lessons","push","LessonID","conditions","conditions2","update","$set","options","multi","lessonDataRes","data"],"mappings":";;;;;;AACA;;AAGA;;;;AACA;;;;AAIA;;;;;;AATA;kBAYe,gBAAkB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,QAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBC,wBAAMC,IAAN,CAAW,EAAX,EAAe,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAC/B,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,2BAAOJ,GADU;AAEjBK,6BAAS;AAFQ,iBAArB;AAIH;AACDR,gBAAIM,IAAJ,CAASF,SAAT;AACH,SARD;AASH,KAVD;AAWA;AACA;AACA;AACAP,QAAIC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BC,wBAAMQ,QAAN,CAAeV,IAAIW,MAAJ,CAAWC,EAA1B,EAA8B,EAACC,UAAU,CAAX,EAA9B,EAA6C,UAACT,GAAD,EAAMC,SAAN,EAAoB;AAC7D,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,gBAAIM,IAAJ,CAASF,SAAT;AACH,SALD;AAMH,KAPD;;AAUA;AACA;;AAEA;;AAEAP,QAAIC,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpCC,wBAAMC,IAAN,CAAW,EAACW,MAAMd,IAAIW,MAAJ,CAAWI,IAAlB,EAAX,EAAoC,UAACX,GAAD,EAAMC,SAAN,EAAoB;AACpD,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,gBAAIM,IAAJ,CAASF,SAAT;AACH,SALD;AAMH,KAPD;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACAP,QAAIkB,GAAJ,CAAQ,MAAR,EAAgB,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC1BC,wBAAMQ,QAAN,CAAeV,IAAIW,MAAJ,CAAWC,EAA1B,EAA8B,UAACR,GAAD,EAAMC,SAAN,EAAoB;AAC9C,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDJ,sBAAUY,QAAV,GAAqBjB,IAAIkB,IAAJ,CAASD,QAA9B;AACAZ,sBAAUc,KAAV,GAAkBnB,IAAIkB,IAAJ,CAASC,KAA3B;AACAd,sBAAUe,WAAV,GAAwBpB,IAAIkB,IAAJ,CAASE,WAAjC;;AAEAf,sBAAUgB,IAAV,CAAe,eAAO;AAClB,oBAAIjB,GAAJ,EAAS;AACLH,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACE,SAAS,oBAAV,EAArB;AACH,aALD;AAOH,SAfD;AAgBH,KAjBD;;AAmBA;AACA;AACA;AACAX,QAAIkB,GAAJ,CAAQ,iBAAR,EAA2B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACrCC,wBAAMQ,QAAN,CAAeV,IAAIW,MAAJ,CAAWC,EAA1B,EAA8B,UAACR,GAAD,EAAMC,SAAN,EAAoB;AAC9C,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDJ,sBAAUS,IAAV,GAAiB,YAAjB;;AAEAT,sBAAUgB,IAAV,CAAe,eAAO;AAClB,oBAAIjB,GAAJ,EAAS;AACLH,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACE,SAAS,oBAAV,EAArB;AACH,aALD;AAOH,SAbD;AAcH,KAfD;AAgBA;AACAX,QAAIwB,MAAJ,CAAW,MAAX,EAAmB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC7BC,wBAAMqB,MAAN,CAAa;AACTC,iBAAKxB,IAAIW,MAAJ,CAAWC;AADP,SAAb,EAEG,UAACR,GAAD,EAAS;AACR,gBAAIA,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDgB,6BAAOF,MAAP,CAAc;AACVG,yBAAS1B,IAAIW,MAAJ,CAAWC;AADV,aAAd,EAEG,UAACR,GAAD,EAAS;AACR,oBAAIA,GAAJ,EAAS;AACLH,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACE,SAAS,wCAAV,EAArB;AACH,aAPD;AAQH,SAdD;AAeH,KAhBD;;AAmBA;AACA;AACAX,QAAI6B,IAAJ,CAAS,iBAAT,EAA4B,UAAC3B,GAAD,EAAMC,GAAN,EAAc;AACtCC,wBAAMQ,QAAN,CAAeV,IAAIW,MAAJ,CAAWC,EAA1B,EAA8B,UAACR,GAAD,EAAMC,SAAN,EAAoB;AAC9C,gBAAID,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACD,gBAAImB,YAAY,IAAIH,gBAAJ,EAAhB;;AAEAG,sBAAUF,OAAV,GAAoB1B,IAAIW,MAAJ,CAAWC,EAA/B;AACAgB,sBAAUC,UAAV,GAAuB7B,IAAIkB,IAAJ,CAASW,UAAhC;AACAD,sBAAUE,UAAV,GAAuB9B,IAAIkB,IAAJ,CAASY,UAAhC;AACAF,sBAAUG,cAAV,GAA2B/B,IAAIkB,IAAJ,CAASa,cAApC;AACAH,sBAAUP,IAAV,CAAe,UAACjB,GAAD,EAAM4B,MAAN,EAAiB;AAC5B,oBAAI5B,GAAJ,EAAS;AACLH,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDJ,0BAAU4B,OAAV,CAAkBC,IAAlB,CAAuBF,MAAvB;AACA3B,0BAAUgB,IAAV,CAAe,eAAO;AAClB,wBAAIjB,GAAJ,EAAS;AACLH,4BAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACE,SAAS,wBAAV,EAArB;AACH,iBALD;AAMH,aAXD;AAYH,SAtBD;AAuBH,KAxBD;;AA0BA;AACA;AACAX,QAAIkB,GAAJ,CAAQ,kBAAR,EAA4B,UAAChB,GAAD,EAAMC,GAAN,EAAc;;AAEtC,YAAIkC,WAAWnC,IAAIW,MAAJ,CAAWC,EAA1B;AACA,YAAIwB,aAAa,EAACZ,KAAKW,QAAN,EAAjB;AAAA,YACIE,cAAc,EAACb,KAAKW,QAAN,EADlB;AAAA,YAEMG,SAAS;AACPC,kBAAM;AACF,8BAAcvC,IAAIkB,IAAJ,CAASW,UADrB;AAEF,8BAAc7B,IAAIkB,IAAJ,CAASY;AACvB;;AAHE;AADC,SAFf;AAAA,YAUMU,UAAU,EAACC,OAAO,IAAR,EAVhB;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACAhB,yBAAOa,MAAP,CAAcF,UAAd,EAA0BE,MAA1B,EAAkCE,OAAlC,EAA2C,UAACpC,GAAD,EAAMsC,aAAN,EAAwB;AAC/D,gBAAItC,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;;AAED;AACA;AACA;AACA;AACA;;;AAGAR,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACE,SAAS,yCAAV,EAAqDkC,MAAMD,aAA3D,EAArB;AACH,SAbD;;AAeA;AACA;AACA;AACA;AACA;AACA;AACH,KA/CD;;AAkaAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCwB,yBAAOtB,IAAP,CAAY,EAACuB,SAAS1B,IAAIW,MAAJ,CAAWC,EAArB,EAAZ,EAAsC,UAACR,GAAD,EAAM6B,OAAN,EAAkB;AACpD,gBAAI7B,GAAJ,EAAS;AACLH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOJ,GAAR,EAAaK,SAAS,iCAAtB,EAArB;AACH;AACDR,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB0B,OAArB;AACH,SALD;AAMH,KAPD;;AAUA;AACA,WAAOnC,GAAP;AACH,C;;AAjVD;;;AALA","file":"pupilController.js","sourcesContent":["// importing router module from express\nimport {Router} from 'express';\n\n// importing models to be used when posting to database\nimport Pupil from '../model/Pupil';\nimport Lesson from '../model/Lesson';\n\n\n//  verify token is imported to be used to guard routes\nimport VerifyToken from '../middleware/authMiddleware';\n\n\nexport default ({config, db}) => {\n    let api = Router();\n\n    // //  read\n    // // /v1/pupil - Read (return all)\n    api.get('/', (req, res) => {\n        Pupil.find({}, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({\n                    error: err,\n                    message: \"There has been an error \"\n                });\n            }\n            res.json(pupilData);\n        });\n    });\n    //\n    // // /v1/pupil/:id - Read 1 (return by ID)\n    //\n    api.get('/:id', (req, res) => {\n        Pupil.findById(req.params.id, {password: 0}, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            res.json(pupilData);\n        });\n    });\n\n\n    // // /v1/pupil/reg/:id - Read 1 (return by ID)\n    //\n\n    // Used to get a list of users whose role matches that as passed in the URL as :name\n\n    api.get('/regList/:name', (req, res) => {\n        Pupil.find({role: req.params.name}, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            res.json(pupilData);\n        });\n    });\n\n    // /v1/pupil/add - Create\n\n    // api.post('/add', (req, res) => {\n    //     let newPupil = new Pupil();\n    //     newPupil.contact.firstName = req.body.firstName;\n    //     newPupil.contact.lastName = req.body.lastName;\n    //     newPupil.contact.email = req.body.email;\n    //     newPupil.contact.phoneNumber = req.body.phoneNumber;\n    //     newPupil.password = req.body.password;\n    //     newPupil.registration.provisional = req.body.provisional;\n    //     newPupil.registration.theoryTest = req.body.theoryTest;\n    //     newPupil.registration.previousLessons = req.body.previousLessons;\n    //     newPupil.registration.location = req.body.location;\n    //     newPupil.availability = req.body.availability;\n    //\n    //     newPupil.save(err => {\n    //         if (err) {\n    //             res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n    //         }\n    //\n    //         res.status(200).json({\n    //             message: 'new Pupil saved successfully'\n    //         });\n    //     });\n    // });\n\n\n    // // /v1/pupil/:id - Update\n    //\n    api.put('/:id', (req, res) => {\n        Pupil.findById(req.params.id, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            pupilData.location = req.body.location;\n            pupilData.email = req.body.email;\n            pupilData.phoneNumber = req.body.phoneNumber;\n\n            pupilData.save(err => {\n                if (err) {\n                    res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n                }\n                res.status(200).json({message: \"Pupil info updated\"});\n            });\n\n        });\n    });\n\n    // // /v1/pupil/registered/:id - Update\n    //\n    //\n    api.put('/registered/:id', (req, res) => {\n        Pupil.findById(req.params.id, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            pupilData.role = 'Registered';\n\n            pupilData.save(err => {\n                if (err) {\n                    res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n                }\n                res.status(200).json({message: \"Pupil info updated\"});\n            });\n\n        });\n    });\n    // // /v1/pupil/:id - Delete\n    api.delete('/:id', (req, res) => {\n        Pupil.remove({\n            _id: req.params.id\n        }, (err) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            Lesson.remove({\n                pupilId: req.params.id\n            }, (err) => {\n                if (err) {\n                    res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n                }\n                res.status(200).json({message: \"Pupil and lessons Successfully Removed\"});\n            });\n        });\n    });\n\n\n    //  add lesson for specific pupil ID\n    // /v1/pupil/lesson/add/:id\n    api.post('/lesson/add/:id', (req, res) => {\n        Pupil.findById(req.params.id, (err, pupilData) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            let newLesson = new Lesson();\n\n            newLesson.pupilId = req.params.id;\n            newLesson.lessonSLot = req.body.lessonSLot;\n            newLesson.lessonDate = req.body.lessonDate;\n            newLesson.pickUpLocation = req.body.pickUpLocation;\n            newLesson.save((err, review) => {\n                if (err) {\n                    res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n                }\n                pupilData.lessons.push(review);\n                pupilData.save(err => {\n                    if (err) {\n                        res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n                    }\n                    res.status(200).json({message: \"Lesson for pupil added\"});\n                })\n            })\n        });\n    });\n\n    // update specific lesson ID\n    //  // /v1/pupil/lesson/edit/:id\n    api.put('/lesson/edit/:id', (req, res) => {\n\n        let LessonID = req.params.id;\n        let conditions = {_id: LessonID},\n            conditions2 = {_id: LessonID}\n            , update = {\n                $set: {\n                    \"lessonSLot\": req.body.lessonSLot,\n                    \"lessonDate\": req.body.lessonDate\n                    // \"Pupil.lessons.lessonSlot\": lessonData.lessonSLot\n\n                }\n            }\n            , options = {multi: true};\n\n\n        // let resLessonData = {\n        //         $set: {\n        //             \"lessonSLot\": req.body.lessonSLot,\n        //             \"lessonDate\": req.body.lessonDate\n        //             // \"Pupil.lessons.lessonSlot\": lessonData.lessonSLot\n        //\n        //         }};\n\n\n        // Lesson.update(LessonID, resLessonData, (err, lessonDataRes) => {\n        Lesson.update(conditions, update, options, (err, lessonDataRes) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n\n            //  To update the lesson on the pupil document we select the Pupil document and use findOneAndUpdate\n            //  The pupil is selected using hte _id from the lesson pupil id\n            // //  The second variable is telling mongoose to\n            // //\n            //\n\n\n            res.status(200).json({message: \"Lesson info Updated I think this time??\", data: lessonDataRes});\n        });\n\n        // Pupil.update({_id: lessonDataRes.pupilId}, update, options, (err) => {\n        //     if (err) {\n        //         res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n        //     }\n        // });\n        // }); // end of find pupil\n    });\n\n\n    // - - - - - - - - - -\n    // Second attempt!\n    // - - - - - - - - - -\n\n    // // update specific lesson ID\n    //  // /v1/pupil/lesson/edit/:id\n    // api.put('/lesson/edit/:id', (req, res) => {\n    //     // finds lesson by id based on the params passed by the URL\n    //     Lesson.findById(req.params.id, (err, lessonData) => {\n    //         // if there is an error it is returned to the browser with message and 401 http code\n    //         if (err) {\n    //             res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n    //\n    //         }\n    //\n    //\n    //     // // let lessonData = {};\n    //     // let LessonID = req.params.id;\n    //     //\n    //     //  if the data is found it is returned as an object named lessonData\n    //     //  each key is updated with the object data put through on the request\n    //     lessonData.pupilId = req.params.id;\n    //     lessonData.lessonSLot = req.body.lessonSLot;\n    //     lessonData.lessonDate = req.body.lessonDate;\n    //     lessonData.pickUpLocation = req.body.pickUpLocation;\n    //\n    //         lessonData.save((err, lessonDataRes) => {\n    //             if (err) {\n    //                 res.status(500).json({\n    //                     error: err,\n    //                     message: \"There has been an error registering pupil\",\n    //                     success: false\n    //                 });\n    //             }\n    //\n    //\n    //             //- - - -\n    //             Pupil.update(lessonDataRes._id, (err, lessonData) => {\n    //                 // if there is an error it is returned to the browser with message and 401 http code\n    //                 if (err) {\n    //                     res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n    //\n    //                 }\n    //                 lessonData.save(err => {\n    //                     if (err) {\n    //                         res.status(500).json({\n    //                             error: err,\n    //                             message: \"There has been an error registering pupil\",\n    //                             success: false\n    //                         });\n    //                     }\n    //                     res.status(200).json({\n    //                         message: \"Blog post successfully updated\",\n    //                         success: true\n    //                     });\n    //                 } )\n    //\n    //             });\n    //             // - - - - -\n    //\n    //\n    //             res.status(200).json({\n    //                 message: \"Blog post successfully updated\",\n    //                 success: true\n    //             });\n    //         });\n    //\n    //\n    //\n    //\n    //\n    //\n    //      // Lesson is then updated using findOneAndUpdate passing the updated data object\n    //      // Using the _id as an identifier of which lesson to update\n    //      // This updates the Lesson document\n    //     // Lesson.findOneAndUpdate({_id: LessonID}, {\n    //     //     $set: {\n    //     //         \"lessonSlot\": req.body.lessonSLot,\n    //     //         \"lessonDate\": req.body.lessonDate\n    //     //         // \"Pupil.lessons.lessonSlot\": lessonData.lessonSLot\n    //     //     }\n    //     // }, (err) => {\n    //     //     if (err) {\n    //     //         res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n    //     //     }\n    //     //\n    //     //     //  To update the lesson on the pupil document we select the Pupil document and use findOneAndUpdate\n    //     //     //  The pupil is selected using hte _id from the lesson pupil id\n    //     //     // //  The second variable is telling mongoose to\n    //     //     // //\n    //     //     //\n    //     //     // Pupil.findOneAndUpdate({_id: lessonData.pupilId}, {\n    //     //     //     $set: {\n    //     //     //         \"lessons.lessonSlot\": lessonData.lessonSLot,\n    //     //     //         \"lessons.lessonDate\": lessonData.lessonDate\n    //     //     //         // \"Pupil.lessons.lessonSlot\": lessonData.lessonSLot\n    //     //     //\n    //     //     //     }\n    //     //     // }, (err) => {\n    //     //     //     if (err) {\n    //     //     //         res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n    //     //     //     }\n    //     //     // });\n    //     //     res.status(200).json({message: \"Lesson info Updated I think?\"});\n    //     // });\n    //     }); // end of find pupil\n    // });\n\n\n    // get all lessons for a specific pupil id\n    // /v1/foodTruck/reviews/:id\n    api.get('/lesson/:id', (req, res) => {\n        Lesson.find({pupilId: req.params.id}, (err, lessons) => {\n            if (err) {\n                res.status(500).json({error: err, message: \"Woop wop somethings gone wrong!\"});\n            }\n            res.status(200).json(lessons);\n        })\n    });\n\n\n    //  return should be at the bottom of the export to return the api\n    return api;\n}\n\n\n"]}